
/**
* LibraryServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LibraryServicesInterface.idl
* Monday, March 18, 2019 3:25:15 PM EDT
*/

public abstract class LibraryServicePOA extends org.omg.PortableServer.Servant
 implements LibraryServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("findItem", new java.lang.Integer (0));
    _methods.put ("returnItem", new java.lang.Integer (1));
    _methods.put ("borrowItem", new java.lang.Integer (2));
    _methods.put ("addItem", new java.lang.Integer (3));
    _methods.put ("removeItem", new java.lang.Integer (4));
    _methods.put ("listItem", new java.lang.Integer (5));
    _methods.put ("addUserInWaitingList", new java.lang.Integer (6));
    _methods.put ("exchangeItem", new java.lang.Integer (7));
    _methods.put ("validateUserName", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // LibraryService/findItem
       {
         String userId = in.read_string ();
         String itemName = in.read_string ();
         String $result = null;
         $result = this.findItem (userId, itemName);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // LibraryService/returnItem
       {
         String userId = in.read_string ();
         String itemID = in.read_string ();
         String $result = null;
         $result = this.returnItem (userId, itemID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // LibraryService/borrowItem
       {
         String userId = in.read_string ();
         String itemID = in.read_string ();
         int numberOfDays = in.read_long ();
         String $result = null;
         $result = this.borrowItem (userId, itemID, numberOfDays);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // LibraryService/addItem
       {
         String userId = in.read_string ();
         String itemID = in.read_string ();
         String itemName = in.read_string ();
         int quantity = in.read_long ();
         String $result = null;
         $result = this.addItem (userId, itemID, itemName, quantity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // LibraryService/removeItem
       {
         String managerId = in.read_string ();
         String itemId = in.read_string ();
         int quantity = in.read_long ();
         String $result = null;
         $result = this.removeItem (managerId, itemId, quantity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // LibraryService/listItem
       {
         String managerId = in.read_string ();
         String $result = null;
         $result = this.listItem (managerId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // LibraryService/addUserInWaitingList
       {
         String userId = in.read_string ();
         String ItemId = in.read_string ();
         int numberOfDays = in.read_long ();
         String $result = null;
         $result = this.addUserInWaitingList (userId, ItemId, numberOfDays);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // LibraryService/exchangeItem
       {
         String userId = in.read_string ();
         String oldItemId = in.read_string ();
         String newItemID = in.read_string ();
         String $result = null;
         $result = this.exchangeItem (userId, oldItemId, newItemID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // LibraryService/validateUserName
       {
         String userId = in.read_string ();
         String $result = null;
         $result = this.validateUserName (userId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:LibraryService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LibraryService _this() 
  {
    return LibraryServiceHelper.narrow(
    super._this_object());
  }

  public LibraryService _this(org.omg.CORBA.ORB orb) 
  {
    return LibraryServiceHelper.narrow(
    super._this_object(orb));
  }


} // class LibraryServicePOA
